local UIS = game:GetService("UserInputService")
local RS = game:GetService("ReplicatedStorage")
local Plrs = game:GetService("Players")
local TS = game:GetService("TweenService")
local RunS = game:GetService("RunService")
local SS = game:GetService("SoundService")
local Debris = game:GetService("Debris")

local LP = Plrs.LocalPlayer

-- Find the player's in-character LocalScript (Eleven, Sue, etc.)
local function getCharScript()
    local char = LP.Character or LP.CharacterAdded:Wait()
    for _, obj in ipairs(char:GetChildren()) do
        if obj:IsA("LocalScript") and obj.Name == "Eleven" or obj.Name == "Sue" then
            return obj
        end
    end
    return nil
end

-- Full screen void overlay
local function EnterVoidOverlay(duration, fadeTime, opts)
    duration = duration or 5
    fadeTime = fadeTime or 0.35
    opts = opts or {}

    local faceAway = opts.faceAway or false
    local excludeRoots = opts.exclude or {}
    local reverbType = opts.reverbType or Enum.ReverbType.Cave
    local char = LP.Character or LP.CharacterAdded:Wait()

    -- Play MoveE sound if present
    local headSound = char:FindFirstChild("Head") and char.Head:FindFirstChild("MoveE")
    if headSound and headSound:IsA("Sound") then
        local sClone = headSound:Clone()
        sClone.Parent = SS
        sClone:Play()
        Debris:AddItem(sClone, sClone.TimeLength)
    end

    local function isExcluded(inst)
        for _, root in ipairs(excludeRoots) do
            if inst and root and inst:IsDescendantOf(root) then
                return true
            end
        end
        return false
    end

    -- Create overlay GUI
    local gui = Instance.new("ScreenGui")
    gui.Name = "BlackViewportOverlay"
    gui.IgnoreGuiInset = true
    gui.ResetOnSpawn = false
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    gui.Parent = LP:WaitForChild("PlayerGui")

    local overlay = Instance.new("Frame")
    overlay.Size = UDim2.fromScale(1, 1)
    overlay.BackgroundColor3 = Color3.new(0, 0, 0)
    overlay.BackgroundTransparency = 1
    overlay.BorderSizePixel = 0
    overlay.ZIndex = 1
    overlay.Parent = gui

    local vp = Instance.new("ViewportFrame")
    vp.Size = UDim2.fromScale(1, 1)
    vp.BackgroundTransparency = 1
    vp.ImageTransparency = 1
    vp.ZIndex = 2
    vp.Parent = gui

    local world = Instance.new("WorldModel", vp)
    local charClone = char:Clone()
    for _, d in ipairs(charClone:GetDescendants()) do
        if d:IsA("Script") or d:IsA("LocalScript") then d:Destroy() end
    end
    for _, p in ipairs(charClone:GetDescendants()) do
        if p:IsA("BasePart") then
            p.Anchored, p.CanCollide, p.CanQuery, p.CanTouch = false, false, false, false
        end
    end
    local hum = charClone:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.PlatformStand = true
        hum:ChangeState(Enum.HumanoidStateType.Physics)
    end
    charClone.Parent = world

    local liveMotors, cloneMotors = {}, {}
    for _, m in ipairs(char:GetDescendants()) do
        if m:IsA("Motor6D") then liveMotors[m.Name] = m end
    end
    for _, m in ipairs(charClone:GetDescendants()) do
        if m:IsA("Motor6D") then cloneMotors[m.Name] = m end
    end

    local vpCam = Instance.new("Camera", vp)
    vp.CurrentCamera = vpCam

    local originalVolumes = {}
    local function duckAll()
        local tweenInfo = TweenInfo.new(fadeTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        for _, root in ipairs({workspace, LP.PlayerGui}) do
            for _, s in ipairs(root:GetDescendants()) do
                if s:IsA("Sound") and not s:GetAttribute("NoDuck") and not isExcluded(s) then
                    if s.IsPlaying and s.Volume > 0 then
                        originalVolumes[s] = s.Volume
                        TS:Create(s, tweenInfo, { Volume = 0 }):Play()
                    end
                end
            end
        end
    end
    local function unduckAll()
        local tweenInfo = TweenInfo.new(fadeTime, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
        for s, v in pairs(originalVolumes) do
            if s and s.Parent and s.IsPlaying then
                TS:Create(s, tweenInfo, { Volume = v }):Play()
            end
        end
    end

    local savedReverb = SS.AmbientReverb
    local reverbWasSet = false
    local function restoreReverb()
        if reverbWasSet and SS.AmbientReverb == reverbType then
            SS.AmbientReverb = savedReverb
        end
    end

    local live = true
    local function cleanupAll()
        live = false
        unduckAll()
        restoreReverb()
        gui:Destroy()
    end

    local renderConn
    renderConn = RunS.RenderStepped:Connect(function()
        if not live then return end
        local cam = workspace.CurrentCamera
        vpCam.FieldOfView = cam.FieldOfView
        vpCam.CFrame = cam.CFrame

        local pivot = char:GetPivot()
        charClone:PivotTo(faceAway and CFrame.lookAt(pivot.Position, pivot.Position + cam.CFrame.LookVector, Vector3.yAxis) or pivot)

        for name, cm in pairs(cloneMotors) do
            if liveMotors[name] then
                cm.Transform = liveMotors[name].Transform
            end
        end
    end)

    local humLive = char:FindFirstChildOfClass("Humanoid")
    if humLive then
        humLive.Died:Connect(cleanupAll)
        humLive.HealthChanged:Connect(function(h) if h <= 0 then cleanupAll() end end)
    end
    char.AncestryChanged:Connect(function(_, parent) if not parent then cleanupAll() end end)
    LP.CharacterAdded:Connect(cleanupAll)

    duckAll()
    SS.AmbientReverb = reverbType
    reverbWasSet = true
    TS:Create(overlay, TweenInfo.new(fadeTime), { BackgroundTransparency = 0 }):Play()
    TS:Create(vp, TweenInfo.new(fadeTime), { ImageTransparency = 0 }):Play()

    task.wait(duration)
    cleanupAll()
end

-- Keybinds
UIS.InputBegan:Connect(function(input, processed)
    if processed then return end

    local charScript = getCharScript()
    local remotes = RS:WaitForChild("Characters"):WaitForChild("Vecna"):WaitForChild("Remotes")

    if input.KeyCode == Enum.KeyCode.One then
        remotes.ArmBreak:FireServer()
    elseif input.KeyCode == Enum.KeyCode.Two then
        remotes.TelePunch:FireServer()
    elseif input.KeyCode == Enum.KeyCode.Three then
        if charScript and charScript:FindFirstChild("DestroyCounter") then
            charScript.DestroyCounter:FireServer()
        end
        remotes.ElCounter:FireServer()
    elseif input.KeyCode == Enum.KeyCode.Four then
        remotes.WindExplosion:FireServer()
    elseif input.KeyCode == Enum.KeyCode.Five then
        remotes.ElevenFinisher:FireServer()
    elseif input.KeyCode == Enum.KeyCode.E then
        remotes.ElevenE:FireServer()
        EnterVoidOverlay(7, 1)
elseif input.KeyCode == Enum.KeyCode.G then
for i=1,150 do
  remotes.ArmBreak:FireServer()
  end
elseif input.KeyCode == Enum.KeyCode.H then
for i=1,100 do
     remotes.TelePunch:FireServer()
end
elseif input.KeyCode == Enum.KeyCode.J then
for i=1,50 do
      remotes.WindExplosion:FireServer()
end
    end
end)
