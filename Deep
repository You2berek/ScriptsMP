

game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then
        return 
    end
   



    if input.KeyCode == Enum.KeyCode.One then
local args = {
    [1] = game:GetService("Players").LocalPlayer
}
local anim = Instance.new("Animation")
anim.AnimationId = "rbxassetid://18457307579"

local plr = game:GetService("Players").LocalPlayer
local animTrack = plr.Character.Humanoid:WaitForChild("Animator"):LoadAnimation(anim)


animTrack:Play()
game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Deep"):WaitForChild("Remotes"):WaitForChild("Slam"):FireServer(unpack(args))

elseif input.KeyCode == Enum.KeyCode.Two then

local anim = Instance.new("Animation")
local radius = 5 -- Set the search radius
local player = game.Players.LocalPlayer -- Change as needed if this is a server-side Script
local character = player.Character or player.CharacterAdded:Wait()
local args = {
    [1] = game:GetService("Players").LocalPlayer
}

game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Deep"):WaitForChild("Remotes"):WaitForChild("Surf"):FireServer(unpack(args))
-- Function to get the nearest player
local function getNearestPlayer()
    local closestPlayer = nil
    local shortestDistance = radius

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local otherChar = otherPlayer.Character
            local otherHRP = otherChar.HumanoidRootPart

            local myHRP = character:FindFirstChild("HumanoidRootPart")
            if myHRP then
                local distance = (myHRP.Position - otherHRP.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
    end

    return closestPlayer, shortestDistance
end




anim.AnimationId = "rbxassetid://18437624929"

local plr = game:GetService("Players").LocalPlayer
local animTrack = plr.Character.Humanoid:WaitForChild("Animator"):LoadAnimation(anim)


animTrack:Play()

-- Variables to manage the forced speed and movement
local Player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local character = nil
local humanoid = nil
local bodyVelocity = nil
local rotationSpeed = 2 -- Speed of rotation when pressing A or D
local lastRemoteTime = 0
local remoteInterval = 5 -- Time in seconds between remote events
local isRunning = false -- Flag to control the loop

-- Function to start forcing the player to run involuntarily
local function startForcedMovement()
    character = Player.Character or Player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")

    -- Set WalkSpeed to 100 for the desired running effect
    humanoid.WalkSpeed = 65

    -- Create a BodyVelocity to enforce constant movement
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000) -- High force to overcome inertia
    bodyVelocity.Velocity = Vector3.new(0, 0, 0) -- Will be updated each frame
    bodyVelocity.Parent = humanoid.RootPart

    -- Set the isRunning flag to true to start the loop
    isRunning = true

    -- Update velocity and handle rotation every frame
    RunService.Heartbeat:Connect(function()
        if isRunning and humanoid and humanoid.RootPart then
            -- Update velocity to match the direction the player is facing
            local moveDirection = humanoid.RootPart.CFrame.LookVector
            bodyVelocity.Velocity = moveDirection * humanoid.WalkSpeed
local nearestPlayer, distance = getNearestPlayer()
    if nearestPlayer then
      local args = {
    [1] = workspace:FindFirstChild(nearestPlayer.Name)
}

-- game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Combat"):WaitForChild("Remotes"):WaitForChild("ComboEndRemote"):FireServer(unpack(args))

    else
        print("No players found within radius.")
    end
            -- Fire the remote event every 5 seconds
            if tick() - lastRemoteTime >= remoteInterval then
                lastRemoteTime = tick()
            end
        end
    end)

    -- Allow rotation using A and D keys
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end

        if input.KeyCode == Enum.KeyCode.A then
            -- Rotate character slightly to the left
            character:SetPrimaryPartCFrame(character.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(-rotationSpeed), 0))
        elseif input.KeyCode == Enum.KeyCode.D then
            -- Rotate character slightly to the right
            character:SetPrimaryPartCFrame(character.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(rotationSpeed), 0))
        end
    end)
end

-- Function to stop forcing the player to run
local function stopForcedMovement()
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end

    if humanoid then
        humanoid.WalkSpeed = 10 -- Reset to default WalkSpeed
    end

    -- Set the isRunning flag to false to stop the loop
    isRunning = false
end


startForcedMovement()

animTrack.Ended:Wait()
stopForcedMovement()



elseif input.KeyCode == Enum.KeyCode.Three then
local args = {
    [1] = game:GetService("Players").LocalPlayer
}

game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Deep"):WaitForChild("Remotes"):WaitForChild("Counter"):FireServer(unpack(args))
elseif input.KeyCode == Enum.KeyCode.Four then
local args = {
    [1] = game:GetService("Players").LocalPlayer
}
local anim = Instance.new("Animation")
anim.AnimationId = "rbxassetid://18490835012"

local plr = game:GetService("Players").LocalPlayer
local animTrack = plr.Character.Humanoid:WaitForChild("Animator"):LoadAnimation(anim)


animTrack:Play()
game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Deep"):WaitForChild("Remotes"):WaitForChild("SharkPool"):FireServer(unpack(args))
elseif input.KeyCode == Enum.KeyCode.Five then
local args = {
    [1] = game:GetService("Players").LocalPlayer
}

game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Deep"):WaitForChild("Remotes"):WaitForChild("Finisher"):FireServer(unpack(args))
elseif input.KeyCode == Enum.KeyCode.F then
local args = {

   [1] = game:GetService("Players").LocalPlayer

}
local anim = Instance.new("Animation")
anim.AnimationId = "rbxassetid://9760917435"

local plr = game:GetService("Players").LocalPlayer
local animTrack = plr.Character.Humanoid:WaitForChild("Animator"):LoadAnimation(anim)


animTrack:Play()

game:GetService("ReplicatedStorage").Characters.Combat.Remotes.Blocking:FireServer(unpack(args))
elseif input.KeyCode == Enum.KeyCode.E then
local args = {
    [1] = game:GetService("Players").LocalPlayer
}

game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Deep"):WaitForChild("Remotes"):WaitForChild("DeepThoughts"):FireServer(unpack(args))
   end
end)
